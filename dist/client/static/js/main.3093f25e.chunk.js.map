{"version":3,"sources":["serviceWorker.ts","containers/MainMenu.tsx","helpers/Utils.tsx","components/Label/index.tsx","components/Charter/index.tsx","containers/Body.tsx","containers/Main.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","Sider","Layout","MainMenu","Menu","SubMenu","useState","collapsed","setCollapsed","useEffect","collapsible","onCollapse","col","className","alt","style","width","src","theme","defaultSelectedKeys","mode","Item","key","icon","PieChartOutlined","to","Formatter","amount","minimumFractionDigits","currency","locale","options","maximumFractionDigits","Intl","NumberFormat","format","Label","title","value","seperator","align","i","push","Math","random","marginRight","marginLeft","scale","dataKey","min","max","currentDate","moment","Charter","symbol","data","setData","getData","a","subtract","fin","axios","get","toUpper","res","entries","length","forEach","entry","date","unix","console","log","message","error","details","chartContent","Group","defaultValue","buttonStyle","onChange","e","val","back","changeDate","target","Button","forcefit","height","position","shape","placement","content","trigger","FundTwoTone","onClick","validCharts","columns","dataIndex","sorter","b","rank","render","r","upperCase","market_cap","k","current_price","circulating_supply","price_change_percentage_24h","result","fontWeight","color","row","index","symb","indexOf","Footer","Body","global","markets","marketsLoading","globalLoading","actions","active","setActive","upcomingIcos","setUpcomingIcos","endedIcos","setEndedIcos","marks","setMarks","marketCap","setMarketCap","active_cryptocurrencies","upcoming_icos","ended_icos","market_cap_change_percentage_24h_usd","howMany","Array","prototype","map","call","m","market_cap_rank","image","name","mostFamous","span","margin","float","zIndex","size","type","loading","undefined","Content","path","dataSource","pagination","textAlign","Date","getFullYear","href","Main","setGlobalLoading","setMarketsLoading","updated_at","usefulData","setUsefulData","callMarkets","callGlobal","minHeight","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.3093f25e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator && process.env.PUBLIC_URL) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useState, useEffect } from 'react'\nimport { Layout, Menu } from 'antd'\nimport {\n  DesktopOutlined,\n  PieChartOutlined,\n  TeamOutlined\n} from '@ant-design/icons'\nimport { Link } from 'react-router-dom'\nimport './MainMenu.less'\n\nconst { Sider } = Layout\nconst { SubMenu } = Menu\n\nconst MainMenu = () =>  {\n  const [collapsed, setCollapsed] = useState<boolean>()\n\n  useEffect(() => {\n  }, [])\n\n  return (\n    <Sider collapsible collapsed={collapsed} onCollapse={(col) => setCollapsed(col)}>\n      <div className=\"logo\">\n        <img alt=\"logo\" style={{ width: collapsed ? '50px' : '100px' }} src=\"/logo.png\" />\n      </div>\n      <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\n        <Menu.Item key=\"1\" icon={<PieChartOutlined />}>\n          <Link to=\"/\">Home</Link>\n        </Menu.Item>\n        {/* <Menu.Item key=\"2\" icon={<DesktopOutlined />}>\n          <Link to=\"/about\">About</Link>\n        </Menu.Item>\n        <SubMenu key=\"sub2\" icon={<TeamOutlined />} title=\"Team\">\n          <Menu.Item key=\"6\"><Link to=\"/\">Option 6</Link></Menu.Item>\n          <Menu.Item key=\"8\"><Link to=\"/\">Option 7</Link></Menu.Item>\n        </SubMenu> */}\n      </Menu>\n    </Sider>\n  )\n}\n\nexport default MainMenu\n","type formatterStyle = 'currency' | 'percent'\n\nconst Formatter = (amount: number = 0, minimumFractionDigits: number = 2, style: formatterStyle = 'currency', currency: string = 'USD', locale: string = 'en-US') => {\n  let options: object = {}\n  if (style === 'percent') {\n    options = { style, minimumFractionDigits, maximumFractionDigits: minimumFractionDigits }\n  } else if (style === 'currency') {\n    options = { style, currency, minimumFractionDigits}\n  } else if (style === 'decimal'){\n    options = { style }\n  }\n  return new Intl.NumberFormat(locale, options).format((style === 'percent') ? amount/100 : amount)\n}\n\nconst Logger = (l: any) => console.log('Logger: ', l)\n\nexport { Formatter, Logger }","import React, { Fragment } from 'react'\nimport './index.less'\ntype PosType = \"left\" | \"right\" | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"unset\" | \"center\" | \"end\" | \"justify\" | \"match-parent\" | \"start\" | undefined\n\ntype LabelProps = {\n    title: string,\n    value?: any,\n    seperator?: string,\n    align?: PosType\n}\n\nconst Label = ({ title, value, seperator = '', align = 'left'}: LabelProps) =>  {\n  let i = []\n  if (align !== 'right') {\n    i.push(<Fragment key={Math.random()}>\n      <span key=\"a\" className=\"label\" style={{ marginRight: '10px'}}>{title}{seperator}</span>\n      <span key=\"b\" className=\"label-value\">{value}</span>\n    </Fragment>)\n  } else {\n    i.push(<Fragment key={Math.random()}>\n      <span key=\"a\" className=\"label-value\">{value}</span>\n      <span key=\"b\" className=\"label\" style={{ marginLeft: '10px'}}>{seperator}{title}</span>\n    </Fragment>)\n  }\n  return (\n    <div className=\"main-label\">{i}</div>\n  )\n}\n\nexport default Label","import { Chart, Tooltip, Axis, Line, Point } from 'viser-react'\nimport React, { Fragment, useState } from 'react'\nimport { Popover, Radio, message } from 'antd'\nimport { FundTwoTone } from '@ant-design/icons'\nimport { toUpper } from 'lodash'\nimport moment from 'moment'\nimport axios from 'axios'\n\nconst scale = [{\n  dataKey: 'value',\n  min: 0\n},{\n  dataKey: 'date',\n  min: 0,\n  max: 200\n}]\n\ntype CharterProps = {\n  symbol: any\n}\n\nconst currentDate = moment().format('YYYY-MM-DDTHH:mm')\n\nconst Charter = ({ symbol } : CharterProps) => {\n  const [data, setData] = useState<any>([])\n\n  const getData = async (window: string = moment().subtract(1, 'days').format('YYYY-MM-DDTHH:mm')) => {\n    let fin: any[] = []\n    try {\n      let res = await axios.get(`https://production.api.coindesk.com/v2/price/values/${toUpper(symbol)}?start_date=${window}&end_date=${currentDate}&ohlc=false`)\n      let entries = res?.data?.data?.entries\n      if (entries.length) {\n        let i = 0\n        entries.forEach((entry: Array<number>) => {\n          if (i === 20) {\n            i = 0\n            fin.push({date: moment.unix(entry[0]/1000).format(), value: entry[1]})\n          } else {\n            i++\n          }\n        })\n      }\n      console.log('fin is', fin)\n    } catch (err) {\n      message.error(`There was an error while retrieving the data: ${err.details}`)\n    }\n    setData(fin)\n  }\n\n  const changeDate = (val: string) => {\n    let back\n    switch (val) {\n      case '12H':\n        back = moment().subtract(12, 'hours')\n        break\n      case '1D':\n        back = moment().subtract(1, 'days')\n        break\n      case '1W':\n        back = moment().subtract(1, 'weeks')\n        break\n      case '1M':\n        back = moment().subtract(1, 'months')\n        break\n      case '3M':\n        back = moment().subtract(3, 'months')\n        break\n      default:\n        back = moment().subtract(1, 'days')\n    }\n    console.log('now', typeof back.format('YYYY-MM-DDTHH:mm'), currentDate)\n    getData(back.format('YYYY-MM-DDTHH:mm'))\n  }\n\n  let chartContent = (\n    <Fragment>\n      <Radio.Group\n        defaultValue=\"1D\"\n        buttonStyle=\"solid\"\n        onChange={\n          e => changeDate(e.target.value)\n        }>\n        <Radio.Button value=\"12H\">12H</Radio.Button>\n        <Radio.Button value=\"1D\">1D</Radio.Button>\n        <Radio.Button value=\"1W\">1W</Radio.Button>\n        <Radio.Button value=\"1M\">1M</Radio.Button>\n        <Radio.Button value=\"3M\">3M</Radio.Button>\n      </Radio.Group>\n      <Chart forcefit height={400} data={data} scale={scale}>\n        <Tooltip />\n        <Axis dataKey=\"date\" />\n        <Axis dataKey=\"value\" />\n        <Line position=\"date*value\" />\n        <Point position=\"date*value\" shape=\"circle\"/>\n      </Chart>\n    </Fragment>\n  )\n\n  return (\n    <Popover placement=\"left\" title={symbol} content={chartContent} trigger=\"click\">\n      <FundTwoTone onClick={() => getData()} />\n    </Popover>\n  )\n}\n\nexport default Charter\n","import React, { useState, useEffect } from 'react'\nimport { Layout, Row, Col, Table, Button, } from 'antd'\nimport { Switch, Route } from 'react-router-dom'\nimport { upperCase, toUpper, indexOf } from 'lodash'\n//@ts-ignore\nimport { Formatter } from '@helpers/Utils'\n//@ts-ignore\nimport { Label, Charter } from '@components'\nimport './Body.less'\n\ntype SizeType = 'small' | 'middle' | 'large' | undefined\n\nconst validCharts = ['BTC', 'ETH', 'XRP', 'BCH', 'ADA', 'XLM', 'NEO', 'LTC', 'EOS', 'XEM', 'IOTA', 'DASH', 'XMR', 'TRX', 'ETC', 'QTUM', 'BTG', 'LSK', 'USDT', 'ZEC', 'ZRX', 'DCR', 'BAT', 'LINK', 'DAI', 'XTZ', 'BSV', 'DOGE', 'USDC']\n\ninterface UsefulDataObject {\n  active_cryptocurrencies: number,\n  upcoming_icos: number,\n  ended_icos: number,\n  markets: number,\n  market_cap_change_percentage_24h_usd: number\n}\n\ntype MainContentProps = {\n  global: UsefulDataObject,\n  markets: Array<any>,\n  globalLoading: boolean,\n  marketsLoading: boolean,\n  actions: Function\n}\n\nconst columns: any[] = [{\n    title: '#',\n    dataIndex: 'rank',\n    key: 'rank',\n    align: 'center',\n    sorter: (a: any, b: any) => a.rank - b.rank,\n  }, {\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n    render: (a: Array<string>) => (<div><img alt={a[1]} className=\"crypto-logo\" src={a[0]} />{a[1]}</div>)\n  }, {\n    title: 'Symbol',\n    dataIndex: 'symbol',\n    key: 'symbol',\n    align: 'center',\n    render: (r: string) => upperCase(r)\n  }, {\n    title: 'Market Cap',\n    dataIndex: 'market_cap',\n    key: 'market_cap',\n    align: 'right',\n    sorter: (a: any, b: any) => a.market_cap - b.market_cap,\n    render: (k: number) => Formatter(k, 0)\n  }, {\n    title: 'Price',\n    dataIndex: 'current_price',\n    key: 'current_price',\n    align: 'right',\n    sorter: (a: any, b: any) => a.current_price - b.current_price,\n    render: (k: number) => Formatter(k)\n  }, {\n    title: 'Circ. Supply',\n    dataIndex: 'circulating_supply',\n    key: 'circulating_supply',\n    align: 'right',\n    sorter: (a: any, b: any) => a.circulating_supply - b.circulating_supply,\n    render: (k: number) => Formatter(k)\n  }, {\n    title: 'Price Change %(24h)',\n    dataIndex: 'price_change_percentage_24h',\n    key: 'price_change_percentage_24h',\n    align: 'center',\n    sorter: (a: any, b: any) => a.price_change_percentage_24h - b.price_change_percentage_24h,\n    render: (k: number) => {\n      let result = 'green'\n      if (k < 0) {\n        result= 'red'\n      } else if (k === 0) {\n        result = 'black'\n      }\n      return (<span style={{ fontWeight: 'bold', color: result}}>{ Formatter(k, 2, 'percent') }</span>)\n    }\n  }, {\n    title: 'Chart',\n    dataIndex: 'chart',\n    key: 'chart',\n    align: 'center',\n    render:  (value: string, row: any, index: number) => {\n      let symb = toUpper(row.symbol)\n      if (indexOf(validCharts, symb) !== -1 ) {\n        return <Charter symbol={symb} />\n      } else {\n        return null\n      }\n    }\n  }]\n\nconst { Footer } = Layout\n\nconst Body = ({ global, markets, globalLoading, marketsLoading, actions } : MainContentProps) =>  {\n  const [active, setActive] = useState<number>()\n  const [upcomingIcos, setUpcomingIcos] = useState<number>()\n  const [endedIcos, setEndedIcos] = useState<number>()\n  const [marks, setMarks] = useState<number>()\n  const [marketCap, setMarketCap] = useState<number>()\n  const [data, setData] = useState<Array<any>>([])\n\n  useEffect(() => {\n    let { active_cryptocurrencies, upcoming_icos, ended_icos, markets, market_cap_change_percentage_24h_usd } = global\n    setActive(active_cryptocurrencies)\n    setUpcomingIcos(upcoming_icos)\n    setEndedIcos(ended_icos)\n    setMarks(markets)\n    setMarketCap(market_cap_change_percentage_24h_usd)\n  }, [global])\n\n  useEffect(() => {\n    const mostFamous = (markets: Array<any>, howMany?: number) => {\n      let a = Array.prototype.map.call(markets, m => ({\n        'key': m.market_cap_rank,\n        'rank': m.market_cap_rank,\n        'name': [m.image, m.name],\n        'symbol': m.symbol,\n        'market_cap': m.market_cap,\n        'current_price': m.current_price,\n        'circulating_supply': m.circulating_supply,\n        'price_change_percentage_24h': m.price_change_percentage_24h\n      }))\n      setData(a)\n    }\n    mostFamous(markets)\n  }, [markets])\n\n  return (\n    <Layout className=\"site-layout\">\n      <Row className=\"top-info\">\n        <Col span={24}>\n          <div style={{ margin: '0 30px 16px 0', float: 'right', zIndex: 50 }}>\n            <Button size=\"small\" type=\"primary\" onClick={() => { actions() }} className='reload-button' loading={marketsLoading}>\n              Reload\n            </Button>\n          </div>\n          <Label title=\"Active crypto\" value={Formatter(active, undefined, 'decimal')} />\n          <Label title=\"Markets\" value={Formatter(marks, undefined, 'decimal')} />\n          <Label title=\"Market Cap Change\" value={Formatter(marketCap, 2, 'percent')} />\n          <Label title=\"Upcoming ICOs\" value={Formatter(upcomingIcos, undefined, 'decimal')} />\n          <Label title=\"Ended ICOs\" value={Formatter(endedIcos, undefined, 'decimal')} />\n        </Col>\n      </Row>\n      <Layout.Content style={{ margin: '0 16px' }}>\n        <Switch>\n          <Route path=\"/\">\n            <div className=\"site-layout-background\">\n              <Table\n                loading={marketsLoading}\n                dataSource={data}\n                columns={columns}\n                size=\"small\"\n                pagination={false} />\n            </div>\n          </Route>\n          <Route path=\"/about\">\n            <div>About</div>\n          </Route>\n          <Route path=\"/users\">\n            <div>Users</div>\n          </Route>\n        </Switch>\n      </Layout.Content>\n      <Footer style={{ textAlign: 'center' }}>CryptoInfo - {(new Date()).getFullYear()} - Created by <a href=\"https://github.com/wirednkod\" target=\"_blank\">wirednkod</a></Footer>\n    </Layout>\n  )\n}\n\nexport default Body\n","import React, { useState, useEffect} from 'react'\nimport { Layout, message } from 'antd'\nimport axios from 'axios'\nimport MainMenu from './MainMenu'\nimport Body from './Body'\nimport { BrowserRouter } from 'react-router-dom'\n\ninterface UsefulDataObject {\n  active_cryptocurrencies: number,\n  upcoming_icos: number,\n  ended_icos: number,\n  markets: number,\n  market_cap_change_percentage_24h_usd: number,\n  updated_at: number\n}\n\nconst Main = () =>  {\n  const [marks, setMarks] = useState([])\n  const [globalLoading, setGlobalLoading] = useState<boolean>(true)\n  const [marketsLoading, setMarketsLoading] = useState<boolean>(true)\n  const [usefulData, setUsefulData] = useState<UsefulDataObject>({\n    active_cryptocurrencies: 0,\n    upcoming_icos: 0,\n    ended_icos: 0,\n    markets: 0,\n    market_cap_change_percentage_24h_usd: 0,\n    updated_at: 0\n  })\n\n  useEffect(() => {\n    callMarkets()\n    callGlobal()\n  }, [])\n\n  const callGlobal = async () => {\n    let data: UsefulDataObject = {\n      active_cryptocurrencies: 0,\n      upcoming_icos: 0,\n      ended_icos: 0,\n      markets: 0,\n      market_cap_change_percentage_24h_usd: 0,\n      updated_at: 0\n    }\n    try {\n      let res = await axios.get(\"/gecko/global\")\n      let { active_cryptocurrencies, upcoming_icos, ended_icos, markets, market_cap_change_percentage_24h_usd, updated_at } = res && res.data && res.data.data\n      data = { active_cryptocurrencies, upcoming_icos, ended_icos, markets, market_cap_change_percentage_24h_usd, updated_at }\n    } catch (err) {\n      message.error(`Error while retrieving market data: ${err}`)\n    } finally {\n      setUsefulData(data)\n      setGlobalLoading(false)\n    }\n  }\n\n  const callMarkets = async () => {\n    let data = []\n    try {\n      let res =  await axios.get(\"/gecko/coins/markets\")\n      data = res && res.data\n    } catch (err) {\n      message.error(`Error while retrieving market data: ${err}`)\n    } finally {\n      setMarks(data)\n      setMarketsLoading(false)\n    }\n  }\n\n  const callActions  = () => {\n    setGlobalLoading(true)\n    setMarketsLoading(true)\n    callGlobal()\n    callMarkets()\n  }\n  \n  return (\n    <BrowserRouter>\n      <Layout style={{ minHeight: '100vh' }}>\n        <MainMenu />\n        <Body\n          global={usefulData}\n          markets={marks || []}\n          globalLoading={globalLoading}\n          marketsLoading={marketsLoading}\n          actions={callActions}\n           />\n      </Layout>\n    </BrowserRouter>\n  )\n}\n\nexport default Main\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.less';\nimport * as serviceWorker from './serviceWorker';\n// @ts-ignore\nimport Main from '@containers/Main'\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["serviceWorker.ts","containers/MainMenu.tsx","helpers/Utils.tsx","components/Label/index.tsx","components/Charter/index.tsx","components/NewsLine/index.tsx","containers/Charts.tsx","containers/News.tsx","containers/Body.tsx","containers/Main.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","Sider","Layout","MainMenu","useState","collapsed","setCollapsed","collapsible","onCollapse","col","className","alt","style","width","src","theme","defaultSelectedKeys","mode","Item","key","icon","DesktopOutlined","to","LineChartOutlined","Formatter","amount","minimumFractionDigits","currency","locale","options","maximumFractionDigits","Intl","NumberFormat","format","Label","title","value","seperator","align","i","push","Math","random","marginRight","marginLeft","scale","dataKey","min","max","currentDate","moment","Charter","symbol","data","setData","getData","a","subtract","fin","axios","get","toUpper","res","entries","length","forEach","entry","date","unix","console","log","message","error","details","chartContent","Group","defaultValue","buttonStyle","onChange","e","val","back","changeDate","target","Button","forcefit","height","position","shape","placement","content","trigger","FundTwoTone","onClick","NewsLine","validCharts","columns","dataIndex","sorter","b","rank","render","r","upperCase","market_cap","k","current_price","circulating_supply","price_change_percentage_24h","result","fontWeight","color","row","index","symb","indexOf","Charts","marketsLoading","setMarketsLoading","callMarkets","Array","prototype","map","call","m","market_cap_rank","image","name","useEffect","loading","dataSource","size","pagination","News","setNews","next","setNext","previous","setPrevious","sample","created_at","domain","id","kind","published_at","slug","source","region","path","url","votes","comments","disliked","important","liked","lol","negative","positive","saved","toxic","bringNews","results","news","arr","n","createNewsList","Body","global","actions","active","setActive","upcomingIcos","setUpcomingIcos","endedIcos","setEndedIcos","marks","setMarks","marketCap","setMarketCap","active_cryptocurrencies","upcoming_icos","ended_icos","markets","market_cap_change_percentage_24h_usd","span","undefined","Content","flex","exact","Date","getFullYear","href","rel","GithubFilled","LinkedinFilled","Main","updated_at","usefulData","setUsefulData","callGlobal","minHeight","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.1a0e37b2.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator && process.env.PUBLIC_URL) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useState } from 'react'\nimport { Layout, Menu } from 'antd'\nimport {\n  DesktopOutlined,\n  LineChartOutlined,\n  // TeamOutlined\n} from '@ant-design/icons'\nimport { Link } from 'react-router-dom'\nimport './MainMenu.less'\n\nconst { Sider } = Layout\n// const { SubMenu } = Menu\n\nconst MainMenu = () =>  {\n  const [collapsed, setCollapsed] = useState<boolean>()\n\n  return (\n    <Sider collapsible collapsed={collapsed} onCollapse={(col) => setCollapsed(col)}>\n      <div className=\"logo\">\n        <img alt=\"logo\" style={{ width: collapsed ? '50px' : '100px' }} src=\"/logo.png\" />\n      </div>\n      <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\n      <Menu.Item key=\"1\" icon={<DesktopOutlined />}>\n          <Link to=\"/\">News</Link>\n        </Menu.Item>\n        <Menu.Item key=\"2\" icon={<LineChartOutlined />}>\n          <Link to=\"/charts\">Charts</Link>\n        </Menu.Item>\n        {/*\n        <SubMenu key=\"sub2\" icon={<TeamOutlined />} title=\"Team\">\n          <Menu.Item key=\"6\"><Link to=\"/\">Option 6</Link></Menu.Item>\n          <Menu.Item key=\"8\"><Link to=\"/\">Option 7</Link></Menu.Item>\n        </SubMenu>\n        */}\n      </Menu>\n    </Sider>\n  )\n}\n\nexport default MainMenu\n","type formatterStyle = 'currency' | 'percent'\n\nconst Formatter = (amount: number = 0, minimumFractionDigits: number = 2, style: formatterStyle = 'currency', currency: string = 'USD', locale: string = 'en-US') => {\n  let options: object = {}\n  if (style === 'percent') {\n    options = { style, minimumFractionDigits, maximumFractionDigits: minimumFractionDigits }\n  } else if (style === 'currency') {\n    options = { style, currency, minimumFractionDigits}\n  } else if (style === 'decimal'){\n    options = { style }\n  }\n  return new Intl.NumberFormat(locale, options).format((style === 'percent') ? amount/100 : amount)\n}\n\nconst Logger = (l: any) => console.log('Logger: ', l)\n\nexport { Formatter, Logger }","import React, { Fragment } from 'react'\nimport './index.less'\ntype PosType = \"left\" | \"right\" | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"unset\" | \"center\" | \"end\" | \"justify\" | \"match-parent\" | \"start\" | undefined\n\ntype LabelProps = {\n    title: string,\n    value?: any,\n    seperator?: string,\n    align?: PosType\n}\n\nconst Label = ({ title, value, seperator = '', align = 'left'}: LabelProps) =>  {\n  let i = []\n  if (align !== 'right') {\n    i.push(<Fragment key={Math.random()}>\n      <span key=\"a\" className=\"label\" style={{ marginRight: '10px'}}>{title}{seperator}</span>\n      <span key=\"b\" className=\"label-value\">{value}</span>\n    </Fragment>)\n  } else {\n    i.push(<Fragment key={Math.random()}>\n      <span key=\"a\" className=\"label-value\">{value}</span>\n      <span key=\"b\" className=\"label\" style={{ marginLeft: '10px'}}>{seperator}{title}</span>\n    </Fragment>)\n  }\n  return (\n    <div className=\"main-label\">{i}</div>\n  )\n}\n\nexport default Label","import { Chart, Tooltip, Axis, Line, Point } from 'viser-react'\nimport React, { Fragment, useState } from 'react'\nimport { Popover, Radio, message } from 'antd'\nimport { FundTwoTone } from '@ant-design/icons'\nimport { toUpper } from 'lodash'\nimport moment from 'moment'\nimport axios from 'axios'\n\nconst scale = [{\n  dataKey: 'value',\n  min: 0\n},{\n  dataKey: 'date',\n  min: 0,\n  max: 200\n}]\n\ntype CharterProps = {\n  symbol: any\n}\n\nconst currentDate = moment().format('YYYY-MM-DDTHH:mm')\n\nconst Charter = ({ symbol } : CharterProps) => {\n  const [data, setData] = useState<any>([])\n\n  const getData = async (window: string = moment().subtract(1, 'days').format('YYYY-MM-DDTHH:mm')) => {\n    let fin: any[] = []\n    try {\n      let res = await axios.get(`https://production.api.coindesk.com/v2/price/values/${toUpper(symbol)}?start_date=${window}&end_date=${currentDate}&ohlc=false`)\n      let entries = res?.data?.data?.entries\n      if (entries.length) {\n        let i = 0\n        entries.forEach((entry: Array<number>) => {\n          if (i === 20) {\n            i = 0\n            fin.push({date: moment.unix(entry[0]/1000).format(), value: entry[1]})\n          } else {\n            i++\n          }\n        })\n      }\n      console.log('fin is', fin)\n    } catch (err) {\n      message.error(`There was an error while retrieving the data: ${err.details}`)\n    }\n    setData(fin)\n  }\n\n  const changeDate = (val: string) => {\n    let back\n    switch (val) {\n      case '12H':\n        back = moment().subtract(12, 'hours')\n        break\n      case '1D':\n        back = moment().subtract(1, 'days')\n        break\n      case '1W':\n        back = moment().subtract(1, 'weeks')\n        break\n      case '1M':\n        back = moment().subtract(1, 'months')\n        break\n      case '3M':\n        back = moment().subtract(3, 'months')\n        break\n      default:\n        back = moment().subtract(1, 'days')\n    }\n    console.log('now', typeof back.format('YYYY-MM-DDTHH:mm'), currentDate)\n    getData(back.format('YYYY-MM-DDTHH:mm'))\n  }\n\n  let chartContent = (\n    <Fragment>\n      <Radio.Group\n        defaultValue=\"1D\"\n        buttonStyle=\"solid\"\n        onChange={\n          e => changeDate(e.target.value)\n        }>\n        <Radio.Button value=\"12H\">12H</Radio.Button>\n        <Radio.Button value=\"1D\">1D</Radio.Button>\n        <Radio.Button value=\"1W\">1W</Radio.Button>\n        <Radio.Button value=\"1M\">1M</Radio.Button>\n        <Radio.Button value=\"3M\">3M</Radio.Button>\n      </Radio.Group>\n      <Chart forcefit height={400} data={data} scale={scale}>\n        <Tooltip />\n        <Axis dataKey=\"date\" />\n        <Axis dataKey=\"value\" />\n        <Line position=\"date*value\" />\n        <Point position=\"date*value\" shape=\"circle\"/>\n      </Chart>\n    </Fragment>\n  )\n\n  return (\n    <Popover placement=\"left\" title={symbol} content={chartContent} trigger=\"click\">\n      <FundTwoTone onClick={() => getData()} />\n    </Popover>\n  )\n}\n\nexport default Charter\n","import React\n// , { Fragment } \nfrom 'react'\n// import './index.less'\n// type PosType = \"left\" | \"right\" | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"unset\" | \"center\" | \"end\" | \"justify\" | \"match-parent\" | \"start\" | undefined\n\ntype NewsLineProps = {\n    // title: string,\n    // value?: any,\n    // seperator?: string,\n    // align?: PosType\n}\n\nconst NewsLine = () =>  {\n  \n  return (\n    <div>News</div>\n  )\n}\n\nexport default NewsLine","import React, { useState, useEffect } from 'react'\nimport { Table, message } from 'antd'\nimport axios from 'axios'\nimport { upperCase, toUpper, indexOf } from 'lodash'\n//@ts-ignore\nimport { Formatter } from '@helpers/Utils'\n//@ts-ignore\nimport { Charter } from '@components'\nimport './Body.less'\n\nconst validCharts = ['BTC', 'ETH', 'XRP', 'BCH', 'ADA', 'XLM', 'NEO', 'LTC', 'EOS', 'XEM', 'IOTA', 'DASH', 'XMR', 'TRX', 'ETC', 'QTUM', 'BTG', 'LSK', 'USDT', 'ZEC', 'ZRX', 'DCR', 'BAT', 'LINK', 'DAI', 'XTZ', 'BSV', 'DOGE', 'USDC']\n\nconst columns: any[] = [{\n    title: '#',\n    dataIndex: 'rank',\n    key: 'rank',\n    align: 'center',\n    sorter: (a: any, b: any) => a.rank - b.rank,\n  }, {\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n    render: (a: Array<string>) => (<div><img alt={a[1]} className=\"crypto-logo\" src={a[0]} />{a[1]}</div>)\n  }, {\n    title: 'Symbol',\n    dataIndex: 'symbol',\n    key: 'symbol',\n    align: 'center',\n    render: (r: string) => upperCase(r)\n  }, {\n    title: 'Market Cap',\n    dataIndex: 'market_cap',\n    key: 'market_cap',\n    align: 'right',\n    sorter: (a: any, b: any) => a.market_cap - b.market_cap,\n    render: (k: number) => Formatter(k, 0)\n  }, {\n    title: 'Price',\n    dataIndex: 'current_price',\n    key: 'current_price',\n    align: 'right',\n    sorter: (a: any, b: any) => a.current_price - b.current_price,\n    render: (k: number) => Formatter(k)\n  }, {\n    title: 'Circ. Supply',\n    dataIndex: 'circulating_supply',\n    key: 'circulating_supply',\n    align: 'right',\n    sorter: (a: any, b: any) => a.circulating_supply - b.circulating_supply,\n    render: (k: number) => Formatter(k)\n  }, {\n    title: 'Price Change %(24h)',\n    dataIndex: 'price_change_percentage_24h',\n    key: 'price_change_percentage_24h',\n    align: 'center',\n    sorter: (a: any, b: any) => a.price_change_percentage_24h - b.price_change_percentage_24h,\n    render: (k: number) => {\n      let result = 'green'\n      if (k < 0) {\n        result= 'red'\n      } else if (k === 0) {\n        result = 'black'\n      }\n      return (<span style={{ fontWeight: 'bold', color: result}}>{ Formatter(k, 2, 'percent') }</span>)\n    }\n  }, {\n    title: 'Chart',\n    dataIndex: 'chart',\n    key: 'chart',\n    align: 'center',\n    render:  (value: string, row: any, index: number) => {\n      let symb = toUpper(row.symbol)\n      if (indexOf(validCharts, symb) !== -1 ) {\n        return <Charter symbol={symb} />\n      } else {\n        return null\n      }\n    }\n  }]\n\nconst Charts = () =>  {\n  const [marketsLoading, setMarketsLoading] = useState<boolean>(true)\n  const [data, setData] = useState<Array<any>>([])\n\n  const callMarkets = async () => {\n    try {\n      let res =  await axios.get(\"/gecko/coins/markets\")\n      let a = Array.prototype.map.call(res?.data, m => ({\n        'key': m.market_cap_rank,\n        'rank': m.market_cap_rank,\n        'name': [m.image, m.name],\n        'symbol': m.symbol,\n        'market_cap': m.market_cap,\n        'current_price': m.current_price,\n        'circulating_supply': m.circulating_supply,\n        'price_change_percentage_24h': m.price_change_percentage_24h\n      }))\n      setData(a)\n    } catch (err) {\n      message.error(`Error while retrieving market data: ${err}`)\n    } finally {\n      setMarketsLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    callMarkets()\n  }, [])\n\n  return (\n    <Table\n      loading={marketsLoading}\n      dataSource={data}\n      columns={columns}\n      size=\"small\"\n      pagination={false} />\n  )\n}\n\nexport default Charts\n","import React, { useState, useEffect } from 'react'\nimport { \n  // Table, \n  message } from 'antd'\nimport axios from 'axios'\n//@ts-ignore\nimport { NewsLine } from '@components'\nconst News = () =>  {\n\n  const [news, setNews] = useState()\n  const [next, setNext] = useState()\n  const [previous, setPrevious] = useState()\n\n  const sample = [\n    {\n      created_at: \"2020-08-27T08:00:00Z\",\n      domain: \"coindesk.com\",\n      id: 9797578,\n      kind: \"news\",\n      published_at: \"2020-08-27T08:00:00Z\",\n      slug: \"Is-This-the-Blockchain-Firm-That-Will-Get-Enterprise-to-Finally-Embrace-Open-Networks\",\n      source: {\n        title: \"CoinDesk\",\n        region: \"en\",\n        domain: \"coindesk.com\",\n        path: null\n      },\n      title: \"Is This the Blockchain Firm That Will Get Enterprise to Finally Embrace Open Networks?\",\n      url: \"https://cryptopanic.com/news/9797578/Is-This-the-Blockchain-Firm-That-Will-Get-Enterprise-to-Finally-Embrace-Open-Networks\",\n      votes: {\n        comments: 0,\n        disliked: 0,\n        important: 0,\n        liked: 0,\n        lol: 0,\n        negative: 0,\n        positive: 0,\n        saved: 0,\n        toxic: 0\n      }\n    }\n  ]\n\n  const bringNews = async () => {\n    try {\n      let res =  await axios.get(\"/news/get\")\n      let { results, next, previous } = res?.data?.data \n      setNews(results)\n      setNext(next)\n      setPrevious(previous)\n      console.log('res for new is ', results)\n      console.log('next for new is ', next)\n      console.log('previous for new is ', previous)\n    } catch (err) {\n      message.error(`Error while retrieving market data: ${err}`)\n    } finally {\n      console.log('final')\n    }\n  }\n\n  useEffect(() => {\n    console.log(next, previous)\n    bringNews()\n  }, [next, previous])\n\n  const createNewsList = (news) => {\n    let arr = []\n    sample?.map(n => {\n      // <li><a href={n.url} target=\"_blank\">{n.title}</a></li>\n      arr.push(<NewsLine />)\n    })\n    return arr\n  }\n\n  return (createNewsList(news))\n}\n\nexport default News\n","import React, { useState, useEffect } from 'react'\nimport { Layout, Row, Col } from 'antd'\nimport { Switch, Route } from 'react-router-dom'\nimport { GithubFilled, LinkedinFilled } from '@ant-design/icons';\n//@ts-ignore\nimport { Formatter } from '@helpers/Utils'\n//@ts-ignore\nimport { Label } from '@components'\n//@ts-ignore\nimport { Charts, News } from '@containers/index.tsx'\nimport './Body.less'\n\ninterface UsefulDataObject {\n  active_cryptocurrencies: number,\n  upcoming_icos: number,\n  ended_icos: number,\n  markets: number,\n  market_cap_change_percentage_24h_usd: number,\n  updated_at: number\n}\n\ntype BodyProps = {\n  global: UsefulDataObject,\n  actions: Function\n}\n\nconst Body = ({ global, actions } : BodyProps) =>  {\n  const [active, setActive] = useState<number>()\n  const [upcomingIcos, setUpcomingIcos] = useState<number>()\n  const [endedIcos, setEndedIcos] = useState<number>()\n  const [marks, setMarks] = useState<number>()\n  const [marketCap, setMarketCap] = useState<number>()\n\n  useEffect(() => {\n    let { active_cryptocurrencies, upcoming_icos, ended_icos, markets, market_cap_change_percentage_24h_usd } = global\n    setActive(active_cryptocurrencies)\n    setUpcomingIcos(upcoming_icos)\n    setEndedIcos(ended_icos)\n    setMarks(markets)\n    setMarketCap(market_cap_change_percentage_24h_usd)\n  }, [global])\n\n  return (\n    <Layout className=\"site-layout\">\n      <Row className=\"top-info\">\n        <Col span={24}>\n          <Label title=\"Active crypto\" value={Formatter(active, undefined, 'decimal')} />\n          <Label title=\"Markets\" value={Formatter(marks, undefined, 'decimal')} />\n          <Label title=\"Market Cap Change\" value={Formatter(marketCap, 2, 'percent')} />\n          <Label title=\"Upcoming ICOs\" value={Formatter(upcomingIcos, undefined, 'decimal')} />\n          <Label title=\"Ended ICOs\" value={Formatter(endedIcos, undefined, 'decimal')} />\n        </Col>\n      </Row>\n      <Layout.Content style={{ flex: 'unset' }}>\n        <Switch>\n          <Route exact path=\"/charts\">\n            <div className=\"site-layout-background\">\n              <Charts />\n            </div>\n          </Route>\n          <Route path=\"/\">\n            <News />\n          </Route>\n          <Route path=\"/users\">\n            <div>Users</div>\n          </Route>\n        </Switch>\n      </Layout.Content>\n      <div className=\"footer\">\n        <Row>\n          <Col span={24}>CryptoInfo - All rights reserved {(new Date()).getFullYear()}</Col>\n        </Row>\n        <Row>\n          <Col span={24}>Created by wirednkod</Col>\n        </Row>\n        <Row>\n          <Col span={24}>\n            <a href=\"https://github.com/wirednkod\" rel=\"noopener noreferrer\" target=\"_blank\" className=\"profile-icons\"><GithubFilled /></a>\n            <a href=\"https://www.linkedin.com/in/nikolaoskontakis/\" rel=\"noopener noreferrer\" target=\"_blank\" className=\"profile-icons\"><LinkedinFilled /></a>\n          </Col>\n        </Row>\n      </div>\n    </Layout>\n  )\n}\n\nexport default Body\n","import React, { useState, useEffect} from 'react'\nimport { Layout, message } from 'antd'\nimport axios from 'axios'\nimport MainMenu from './MainMenu'\nimport Body from './Body'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\ninterface UsefulDataObject {\n  active_cryptocurrencies: number,\n  upcoming_icos: number,\n  ended_icos: number,\n  markets: number,\n  market_cap_change_percentage_24h_usd: number,\n  updated_at: number\n}\n\nconst Main = () =>  {\n  const [usefulData, setUsefulData] = useState<UsefulDataObject>({\n    active_cryptocurrencies: 0,\n    upcoming_icos: 0,\n    ended_icos: 0,\n    markets: 0,\n    market_cap_change_percentage_24h_usd: 0,\n    updated_at: 0\n  })\n\n  useEffect(() => {\n    callGlobal()\n  }, [])\n\n  const callGlobal = async () => {\n    let data: UsefulDataObject = {\n      active_cryptocurrencies: 0,\n      upcoming_icos: 0,\n      ended_icos: 0,\n      markets: 0,\n      market_cap_change_percentage_24h_usd: 0,\n      updated_at: 0\n    }\n    try {\n      let res = await axios.get(\"/gecko/global\")\n      let { active_cryptocurrencies, upcoming_icos, ended_icos, markets, market_cap_change_percentage_24h_usd, updated_at } = res?.data?.data\n      data = { active_cryptocurrencies, upcoming_icos, ended_icos, markets, market_cap_change_percentage_24h_usd, updated_at }\n    } catch (err) {\n      message.error(`Error while retrieving market data: ${err}`)\n    } finally {\n      setUsefulData(data)\n    }\n  }\n\n  const callActions  = () => {\n    callGlobal()\n  }\n  \n  return (\n    <Router>\n      <Layout style={{ minHeight: '100vh' }}>\n        <MainMenu />\n        <Body\n          global={usefulData}\n          actions={callActions}\n           />\n      </Layout>\n    </Router>\n  )\n}\n\nexport default Main\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.less';\nimport * as serviceWorker from './serviceWorker';\n// @ts-ignore\nimport Main from '@containers/Main'\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}